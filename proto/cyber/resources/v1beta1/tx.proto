syntax = "proto3";
package cyber.resources.v1beta1;

import "gogoproto/gogo.proto";
import "cosmos/msg/v1/msg.proto";
import "cosmos_proto/cosmos.proto";
import "cyber/resources/v1beta1/types.proto";
import "cosmos/base/v1beta1/coin.proto";

option go_package = "github.com/cybercongress/go-cyber/x/resources/types";

service Msg {
  rpc Investmint(MsgInvestmint) returns (MsgInvestmintResponse);
  rpc UpdateParams(MsgUpdateParams) returns (MsgUpdateParamsResponse);
}

message MsgInvestmint {
  option (gogoproto.equal) = false;
  option (gogoproto.goproto_getters) = false;

  string neuron = 1;
  cosmos.base.v1beta1.Coin amount = 2 [
    (gogoproto.nullable) = false,
    (gogoproto.casttype) = "github.com/cosmos/cosmos-sdk/types.Coin"
  ];
  string resource = 3;
  uint64 length = 4;
}

message MsgUpdateParams {
  option (cosmos.msg.v1.signer) = "authority";

  string authority = 1 [ (cosmos_proto.scalar) = "cosmos.AddressString" ];

  Params params = 2 [ (gogoproto.nullable) = false ];
}

message MsgInvestmintResponse {}
message MsgUpdateParamsResponse {}