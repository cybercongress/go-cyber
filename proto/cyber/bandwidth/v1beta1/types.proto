syntax = "proto3";
package cyber.bandwidth.v1beta1;

import "gogoproto/gogo.proto";

option go_package = "github.com/cybercongress/go-cyber/x/bandwidth/types";

message Params {
  option (gogoproto.equal) = true;

  uint64 recovery_period = 1;
  uint64 adjust_price_period = 2;
  string base_price = 3 [
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec",
    (gogoproto.nullable) = false
  ];
  string base_load = 4 [
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec",
    (gogoproto.nullable) = false
  ];
  uint64 max_block_bandwidth = 5;
}

message NeuronBandwidth {
  option (gogoproto.equal) = false;
  option (gogoproto.goproto_getters) = false;

  string neuron = 1;
  uint64 remained_value = 2;
  uint64 last_updated_block = 3;
  uint64 max_value = 4;
}

message Price {
  option (gogoproto.equal) = false;
  option (gogoproto.goproto_getters) = false;

  string price = 1 [
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec",
    (gogoproto.nullable) = false
  ];
}
