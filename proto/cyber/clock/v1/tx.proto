syntax = "proto3";
package cyber.clock.v1;

option go_package = "github.com/cybercongress/go-cyber/x/clock/types";

import "google/api/annotations.proto";
import "cosmos/msg/v1/msg.proto";
import "cyber/clock/v1/genesis.proto";
import "gogoproto/gogo.proto";
import "cosmos_proto/cosmos.proto";

// Msg defines the Msg service.
service Msg {

  // RegisterClockContract defines the endpoint for
  // registering a new clock contract.
  rpc RegisterClockContract(MsgRegisterClockContract)
      returns (MsgRegisterClockContractResponse) {
    option (google.api.http).post = "/cyber/clock/v1/tx/register";
  };

  // UnregisterClockContract defines the endpoint for
  // unregistering a clock contract.
  rpc UnregisterClockContract(MsgUnregisterClockContract)
      returns (MsgUnregisterClockContractResponse) {
    option (google.api.http).post = "/cyber/clock/v1/tx/unregister";
  };

  // UnjailClockContract defines the endpoint for
  // unjailing a clock contract.
  rpc UnjailClockContract(MsgUnjailClockContract)
      returns (MsgUnjailClockContractResponse) {
    option (google.api.http).post = "/cyber/clock/v1/tx/unjail";
  };

  // UpdateParams defines a governance operation for updating the x/clock module
  // parameters. The authority is hard-coded to the x/gov module account.
  //
  // Since: cosmos-sdk 0.47
  rpc UpdateParams(MsgUpdateParams) returns (MsgUpdateParamsResponse);
}

// MsgRegisterClockContract is the Msg/RegisterClockContract request type.
message MsgRegisterClockContract {
  // The address of the sender.
  string sender_address = 1;
  // The address of the contract to register.
  string contract_address = 2;
}

// MsgRegisterClockContractResponse defines the response structure for executing
// a MsgRegisterClockContract message.
message MsgRegisterClockContractResponse {}

// MsgUnregisterClockContract is the Msg/UnregisterClockContract request type.
message MsgUnregisterClockContract {
  // The address of the sender.
  string sender_address = 1;
  // The address of the contract to unregister.
  string contract_address = 2;
}

// MsgUnregisterClockContractResponse defines the response structure for
// executing a MsgUnregisterClockContract message.
message MsgUnregisterClockContractResponse {}

// MsgUnjailClockContract is the Msg/UnjailClockContract request type.
message MsgUnjailClockContract {
  // The address of the sender.
  string sender_address = 1;
  // The address of the contract to unjail.
  string contract_address = 2;
}

// MsgUnjailClockContractResponse defines the response structure for executing a
// MsgUnjailClockContract message.
message MsgUnjailClockContractResponse {}

// MsgUpdateParams is the Msg/UpdateParams request type.
//
// Since: cosmos-sdk 0.47
message MsgUpdateParams {
  option (cosmos.msg.v1.signer) = "authority";

  // authority is the address of the governance account.
  string authority = 1 [ (cosmos_proto.scalar) = "cosmos.AddressString" ];

  // params defines the x/clock parameters to update.
  //
  // NOTE: All parameters must be supplied.
  Params params = 2 [ (gogoproto.nullable) = false ];
}

// MsgUpdateParamsResponse defines the response structure for executing a
// MsgUpdateParams message.
//
// Since: cosmos-sdk 0.47
message MsgUpdateParamsResponse {}
